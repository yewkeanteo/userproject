//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: ToRORd_dyn_chloride
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Mon Oct 26 12:13:07 2020
//! 
//! <autogenerated>

#include "ToRORddynClmidOpt.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class CellToRORddynClmidFromCellMLOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static CellToRORddynClmidFromCellMLOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new CellToRORddynClmidFromCellMLOpt_LookupTables);
        }
        return mpInstance.get();
    }
    
    void FreeMemory()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }
    
    // Row lookup methods
    // using linear-interpolation
    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<99; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }
    
    
    const double * IndexTable0(double var_chaste_interface__membrane__v)
    {
        const double _offset_0 = var_chaste_interface__membrane__v - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = CellToRORddynClmidFromCellMLOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }
    
// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__v)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__v>mTableMaxs[0] || var_chaste_interface__membrane__v<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~CellToRORddynClmidFromCellMLOpt_LookupTables()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
    }
    
protected:
    CellToRORddynClmidFromCellMLOpt_LookupTables(const CellToRORddynClmidFromCellMLOpt_LookupTables&);
    CellToRORddynClmidFromCellMLOpt_LookupTables& operator= (const CellToRORddynClmidFromCellMLOpt_LookupTables&);
    CellToRORddynClmidFromCellMLOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);
        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 99;
        mTableMins[0] = -100.0001;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mTableMaxs[0] = 99.9999;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;
        CellToRORddynClmidFromCellMLOpt_LookupTables::RegenerateTables();
    }
    
    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][99];
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][0] = 1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 0.0) - 213.59999999999999) * 0.0066137566137566143));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][1] = 1.0 - (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 0.0) - 213.59999999999999) * 0.0066137566137566143)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][2] = 1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 0.0) - 213.59999999999999) * 0.0066137566137566143));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][3] = 1.0 - (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 0.0) - 213.59999999999999) * 0.0066137566137566143)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][4] = 0.29999999999999999 + (0.59999999999999998 / (1.0 + exp((var_chaste_interface__membrane__v - 10.0) * 0.10000000000000001)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][5] = 1.0 - (0.29999999999999999 + (0.59999999999999998 / (1.0 + exp((var_chaste_interface__membrane__v - 10.0) * 0.10000000000000001))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][6] = 0.29999999999999999 + (0.59999999999999998 / (1.0 + exp((var_chaste_interface__membrane__v - 10.0) * 0.10000000000000001)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][7] = 1.0 - (0.29999999999999999 + (0.59999999999999998 / (1.0 + exp((var_chaste_interface__membrane__v - 10.0) * 0.10000000000000001))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][8] = exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][9] = exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][10] = exp(1.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][11] = exp(1.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][12] = exp(1.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][13] = exp(1.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][14] = exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][15] = exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][16] = exp(1.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][17] = exp(1.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][18] = exp(1.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][19] = exp(1.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][20] = 1.0 + exp(0.52239999999999998 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][21] = exp(0.52239999999999998 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][22] = 1.0 + (1.0 / exp(0.52239999999999998 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][23] = exp(0.52239999999999998 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][24] = exp(0.16700000000000001 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][25] = 1.0 + exp(0.52239999999999998 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][26] = exp(0.52239999999999998 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][27] = 1.0 + (1.0 / exp(0.52239999999999998 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][28] = exp(0.52239999999999998 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][29] = exp(0.16700000000000001 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][30] = 9.0730000000000004 * exp(( -0.155 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) * 0.33333333333333331);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][31] = 9.0730000000000004 * exp(( -0.155 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) * 0.33333333333333331);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][32] = 27.780000000000001 * exp((1.155 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) * 0.33333333333333331);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][33] = 27.780000000000001 * exp((1.155 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) * 0.33333333333333331);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][34] = 27.780000000000001 * exp((1.155 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) * 0.33333333333333331);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][35] = 9.0730000000000004 * exp(( -0.155 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) * 0.33333333333333331);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][36] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v - 10.896800000000001)) * 0.041689074544234192));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][37] = exp((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][38] = exp((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][39] = exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][40] = exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][41] = 1.0 / pow(1.0 + exp((-(var_chaste_interface__membrane__v + 56.859999999999999)) * 0.11074197120708749), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][42] = (0.12920000000000001 * exp(-pow((var_chaste_interface__membrane__v + 45.789999999999999) * 0.064350064350064351, 2.0))) + (0.064869999999999997 * exp(-pow((var_chaste_interface__membrane__v - 4.8230000000000004) * 0.019561815336463225, 2.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][43] = 1.0 / pow(1.0 + exp((var_chaste_interface__membrane__v + 71.549999999999997) * 0.13458950201884254), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][44] = 1.0 / (((var_chaste_interface__membrane__v >=  -40.0) ? 0.0 : (0.057000000000000002 * exp((-(var_chaste_interface__membrane__v + 80.0)) * 0.14705882352941177))) + ((var_chaste_interface__membrane__v >=  -40.0) ? (0.77000000000000002 / (0.13 * (1.0 + exp((-(var_chaste_interface__membrane__v + 10.66)) * 0.0900900900900901)))) : ((2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane__v)) + (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane__v)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][45] = 1.0 / pow(1.0 + exp((var_chaste_interface__membrane__v + 71.549999999999997) * 0.13458950201884254), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][46] = 1.0 / (((var_chaste_interface__membrane__v >=  -40.0) ? 0.0 : (((( -25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__v)) - (6.9480000000000002e-06 * exp( -0.043909999999999998 * var_chaste_interface__membrane__v))) * (var_chaste_interface__membrane__v + 37.780000000000001)) / (1.0 + exp(0.311 * (var_chaste_interface__membrane__v + 79.230000000000004))))) + ((var_chaste_interface__membrane__v >=  -40.0) ? ((0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane__v)) / (1.0 + exp( -0.10000000000000001 * (var_chaste_interface__membrane__v + 32.0)))) : ((0.024240000000000001 * exp( -0.01052 * var_chaste_interface__membrane__v)) / (1.0 + exp( -0.13780000000000001 * (var_chaste_interface__membrane__v + 40.140000000000001))))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][47] = 1.0 / pow(1.0 + exp((var_chaste_interface__membrane__v + 77.549999999999997) * 0.13458950201884254), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][48] = 1.0 / (((var_chaste_interface__membrane__v >=  -40.0) ? 0.0 : (0.057000000000000002 * exp((-(var_chaste_interface__membrane__v + 80.0)) * 0.14705882352941177))) + ((var_chaste_interface__membrane__v >=  -40.0) ? (0.77000000000000002 / (0.13 * (1.0 + exp((-(var_chaste_interface__membrane__v + 10.66)) * 0.0900900900900901)))) : ((2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane__v)) + (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane__v)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][49] = 1.0 / pow(1.0 + exp((var_chaste_interface__membrane__v + 71.549999999999997) * 0.13458950201884254), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][50] = 1.46 * (1.0 / (((var_chaste_interface__membrane__v >=  -40.0) ? 0.0 : (((( -25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__v)) - (6.9480000000000002e-06 * exp( -0.043909999999999998 * var_chaste_interface__membrane__v))) * (var_chaste_interface__membrane__v + 37.780000000000001)) / (1.0 + exp(0.311 * (var_chaste_interface__membrane__v + 79.230000000000004))))) + ((var_chaste_interface__membrane__v >=  -40.0) ? ((0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane__v)) / (1.0 + exp( -0.10000000000000001 * (var_chaste_interface__membrane__v + 32.0)))) : ((0.024240000000000001 * exp( -0.01052 * var_chaste_interface__membrane__v)) / (1.0 + exp( -0.13780000000000001 * (var_chaste_interface__membrane__v + 40.140000000000001)))))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][51] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 42.850000000000001)) * 0.18996960486322187));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][52] = (0.12920000000000001 * exp(-pow((var_chaste_interface__membrane__v + 45.789999999999999) * 0.064350064350064351, 2.0))) + (0.064869999999999997 * exp(-pow((var_chaste_interface__membrane__v - 4.8230000000000004) * 0.019561815336463225, 2.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][53] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 87.609999999999999) * 0.13354700854700854));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][54] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 93.810000000000002) * 0.13354700854700854));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][55] = 1.0 / (1.0 + exp((-((var_chaste_interface__membrane__v + 0.0) - 14.34)) * 0.067476383265856948));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][56] = 1.0515000000000001 / ((1.0 / (1.2089000000000001 * (1.0 + exp((-((var_chaste_interface__membrane__v + 0.0) - 18.4099)) * 0.034035137876343539)))) + (3.5 / (1.0 + exp((var_chaste_interface__membrane__v + 100.0) * 0.034035137876343539))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][57] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 43.939999999999998) * 0.17510068289266328));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][58] = (4.5620000000000003 + (1.0 / ((0.39329999999999998 * exp((-(var_chaste_interface__membrane__v + 100.0)) * 0.01)) + (0.08004 * exp((var_chaste_interface__membrane__v + 50.0) * 0.060277275467148887))))) * 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][59] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 43.939999999999998) * 0.17510068289266328));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][60] = (23.620000000000001 + (1.0 / ((0.0014159999999999999 * exp((-(var_chaste_interface__membrane__v + 96.519999999999996)) * 0.016934801016088061)) + (1.7800000000000001e-08 * exp((var_chaste_interface__membrane__v + 114.09999999999999) * 0.12377769525931426))))) * 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][61] = 1.0 / (1.0 + exp((-((var_chaste_interface__membrane__v + 0.0) - 24.34)) * 0.067476383265856948));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][62] = 1.0515000000000001 / ((1.0 / (1.2089000000000001 * (1.0 + exp((-((var_chaste_interface__membrane__v + 0.0) - 18.4099)) * 0.034035137876343539)))) + (3.5 / (1.0 + exp((var_chaste_interface__membrane__v + 100.0) * 0.034035137876343539))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][63] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 43.939999999999998) * 0.17510068289266328));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][64] = (1.3540000000000001 + (0.0001 / (exp(((var_chaste_interface__membrane__v + 0.0) - 167.40000000000001) * 0.062932662051604776) + exp((-((var_chaste_interface__membrane__v + 0.0) - 12.23)) * 4.6425255338904359)))) * (1.0 - (0.5 / (1.0 + exp((var_chaste_interface__membrane__v + 70.0) * 0.050000000000000003)))) * ((4.5620000000000003 + (1.0 / ((0.39329999999999998 * exp((-(var_chaste_interface__membrane__v + 100.0)) * 0.01)) + (0.08004 * exp((var_chaste_interface__membrane__v + 50.0) * 0.060277275467148887))))) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][65] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 43.939999999999998) * 0.17510068289266328));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][66] = (1.3540000000000001 + (0.0001 / (exp(((var_chaste_interface__membrane__v + 0.0) - 167.40000000000001) * 0.062932662051604776) + exp((-((var_chaste_interface__membrane__v + 0.0) - 12.23)) * 4.6425255338904359)))) * (1.0 - (0.5 / (1.0 + exp((var_chaste_interface__membrane__v + 70.0) * 0.050000000000000003)))) * ((23.620000000000001 + (1.0 / ((0.0014159999999999999 * exp((-(var_chaste_interface__membrane__v + 96.519999999999996)) * 0.016934801016088061)) + (1.7800000000000001e-08 * exp((var_chaste_interface__membrane__v + 114.09999999999999) * 0.12377769525931426))))) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][67] = (var_chaste_interface__membrane__v >= 31.497800000000002) ? 1.0 : (1.0763 * exp( -1.0069999999999999 * exp( -0.082900000000000001 * var_chaste_interface__membrane__v)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][68] = (1.0 / (exp( -0.050000000000000003 * (var_chaste_interface__membrane__v + 6.0)) + exp(0.089999999999999997 * (var_chaste_interface__membrane__v + 14.0)))) + 0.59999999999999998;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][69] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][70] = 7.0 + (1.0 / ((0.0044999999999999997 * exp((-(var_chaste_interface__membrane__v + 20.0)) * 0.10000000000000001)) + (0.0044999999999999997 * exp((var_chaste_interface__membrane__v + 20.0) * 0.10000000000000001))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][71] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][72] = 1000.0 + (1.0 / ((3.4999999999999997e-05 * exp((-(var_chaste_interface__membrane__v + 5.0)) * 0.25)) + (3.4999999999999997e-05 * exp((var_chaste_interface__membrane__v + 5.0) * 0.16666666666666666))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][73] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][74] = 7.0 + (1.0 / ((0.040000000000000001 * exp((-(var_chaste_interface__membrane__v - 4.0)) * 0.14285714285714285)) + (0.040000000000000001 * exp((var_chaste_interface__membrane__v - 4.0) * 0.14285714285714285))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][75] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][76] = 100.0 + (1.0 / ((0.00012 * exp((-var_chaste_interface__membrane__v) * 0.33333333333333331)) + (0.00012 * exp(var_chaste_interface__membrane__v * 0.14285714285714285))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][77] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 18.079999999999998) * 0.35821750967187277));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][78] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][79] = 2.5 * (7.0 + (1.0 / ((0.0044999999999999997 * exp((-(var_chaste_interface__membrane__v + 20.0)) * 0.10000000000000001)) + (0.0044999999999999997 * exp((var_chaste_interface__membrane__v + 20.0) * 0.10000000000000001)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][80] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][81] = 2.5 * (7.0 + (1.0 / ((0.040000000000000001 * exp((-(var_chaste_interface__membrane__v - 4.0)) * 0.14285714285714285)) + (0.040000000000000001 * exp((var_chaste_interface__membrane__v - 4.0) * 0.14285714285714285)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][82] = 0.00034900000000000003 * exp( -1.0620000000000001 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][83] = ((0.00034900000000000003 * exp( -1.0620000000000001 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07))) * (0.065250000000000002 * exp( -0.82089999999999996 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07))) * (5.1999999999999997e-05 * exp(1.5249999999999999 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)))) / ((0.057799999999999997 * exp(0.97099999999999997 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07))) * (0.25330000000000003 * exp(0.59530000000000005 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][84] = 0.19109999999999999 + (0.057799999999999997 * exp(0.97099999999999997 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07))) + (5.1999999999999997e-05 * exp(1.5249999999999999 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][85] = 0.11609999999999999 * exp(0.29899999999999999 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][86] = (0.2442 * exp( -1.6040000000000001 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07))) + 0.15437500000000001;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][87] = 0.2442 * exp( -1.6040000000000001 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][88] = 0.11609999999999999 * exp(0.29899999999999999 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][89] = 5.1999999999999997e-05 * exp(1.5249999999999999 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][90] = 0.25330000000000003 * exp(0.59530000000000005 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][91] = (((0.00034900000000000003 * exp( -1.0620000000000001 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07))) * (0.065250000000000002 * exp( -0.82089999999999996 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07))) * (5.1999999999999997e-05 * exp(1.5249999999999999 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)))) / ((0.057799999999999997 * exp(0.97099999999999997 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07))) * (0.25330000000000003 * exp(0.59530000000000005 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07))))) + (0.065250000000000002 * exp( -0.82089999999999996 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][92] = 0.057799999999999997 * exp(0.97099999999999997 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][93] = 0.065250000000000002 * exp( -0.82089999999999996 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][94] = (0.00034900000000000003 * exp( -1.0620000000000001 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07))) + (0.25330000000000003 * exp(0.59530000000000005 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][95] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 11.6)) * 0.11195700850873264));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][96] = 817.29999999999995 + (1.0 / ((0.00023259999999999999 * exp((var_chaste_interface__membrane__v + 48.280000000000001) * 0.056179775280898875)) + (0.001292 * exp((-(var_chaste_interface__membrane__v + 210.0)) * 0.0043478260869565218))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][97] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 11.6)) * 0.11195700850873264));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][98] = 1.0 / ((0.01 * exp((var_chaste_interface__membrane__v - 50.0) * 0.050000000000000003)) + (0.019300000000000001 * exp((-(var_chaste_interface__membrane__v + 66.540000000000006)) * 0.032258064516129031)));
            }
            
            mNeedsRegeneration[0] = false;
        }
        
        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }
    
private:
    /** The single instance of the class */
    static std::shared_ptr<CellToRORddynClmidFromCellMLOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[99];
    
    // Lookup tables
    double (*_lookup_table_0)[99];
    
};

std::shared_ptr<CellToRORddynClmidFromCellMLOpt_LookupTables> CellToRORddynClmidFromCellMLOpt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> CellToRORddynClmidFromCellMLOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__i_Stim_Start = 0.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_PulseDuration = 1.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Amplitude =  -53.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__i_Stim_Amplitude),
                var_chaste_interface__membrane__i_Stim_PulseDuration,
                var_chaste_interface__membrane__i_Stim_Period,
                var_chaste_interface__membrane__i_Stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double CellToRORddynClmidFromCellMLOpt::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    
    CellToRORddynClmidFromCellMLOpt::CellToRORddynClmidFromCellMLOpt(boost::shared_ptr<AbstractIvpOdeSolver> pSolver, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCell(
                pSolver,
                45,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<CellToRORddynClmidFromCellMLOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        this->mParameters[0] = 0.05; // (c,CaMK__CaMKo) [dimensionless]
        this->mParameters[1] = 1.5378; // (c,ryr__Jrel_b) [dimensionless]
        this->mParameters[2] = 1.0; // (c,SERCA__Jup_b) [dimensionless]
        this->mParameters[3] = 0.05; // (c,CaMK__aCaMK) [per_millimolar_per_millisecond]
        this->mParameters[4] = 8.3757e-05; // (c,ICaL__PCa_b) [dimensionless]
        this->mParameters[5] = 0.0; // (c,I_katp__fkatp) [dimensionless]
        this->mParameters[6] = 11.7802; // (c,INa__GNa) [milliS_per_microF]
        this->mParameters[7] = 0.6992; // (c,IK1__GK1_b) [milliS_per_microF]
        this->mParameters[8] = 0.0279; // (c,INaL__GNaL_b) [milliS_per_microF]
        this->mParameters[9] = 0.0321; // (c,IKr__GKr_b) [milliS_per_microF]
        this->mParameters[10] = 0.0011; // (c,IKs__GKs_b) [milliS_per_microF]
        this->mParameters[11] = 0.0034; // (c,INaCa__Gncx_b) [milliS_per_microF]
        this->mParameters[12] = 15.4509; // (c,INaK__Pnak_b) [milliS_per_microF]
        this->mParameters[13] = 0.16; // (c,Ito__Gto_b) [milliS_per_microF]
    }
    
    CellToRORddynClmidFromCellMLOpt::~CellToRORddynClmidFromCellMLOpt()
    {
    }
    
    AbstractLookupTableCollection* CellToRORddynClmidFromCellMLOpt::GetLookupTableCollection()
    {
        return CellToRORddynClmidFromCellMLOpt_LookupTables::Instance();
    }
    
    double CellToRORddynClmidFromCellMLOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -9.133918e+01
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 8.297576e-05
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 2.018820e-02
        double var_chaste_interface__intracellular_ions__nai = rY[3];
        // Units: millimolar; Initial value: 1.594867e+01
        double var_chaste_interface__intracellular_ions__nass = rY[4];
        // Units: millimolar; Initial value: 1.594922e+01
        double var_chaste_interface__intracellular_ions__ki = rY[5];
        // Units: millimolar; Initial value: 1.567131e+02
        double var_chaste_interface__intracellular_ions__kss = rY[6];
        // Units: millimolar; Initial value: 1.567130e+02
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 6.642187e-05
        double var_chaste_interface__intracellular_ions__cli = rY[10];
        // Units: millimolar; Initial value: 4.891277e+01
        double var_chaste_interface__intracellular_ions__clss = rY[11];
        // Units: millimolar; Initial value: 4.891274e+01
        double var_chaste_interface__INa__m = rY[12];
        // Units: dimensionless; Initial value: 4.619565e-04
        double var_chaste_interface__INa__h = rY[13];
        // Units: dimensionless; Initial value: 8.739077e-01
        double var_chaste_interface__INa__j = rY[14];
        // Units: dimensionless; Initial value: 8.737841e-01
        double var_chaste_interface__INa__hp = rY[15];
        // Units: dimensionless; Initial value: 7.478972e-01
        double var_chaste_interface__INa__jp = rY[16];
        // Units: dimensionless; Initial value: 8.735375e-01
        double var_chaste_interface__INaL__mL = rY[17];
        // Units: dimensionless; Initial value: 9.987709e-05
        double var_chaste_interface__INaL__hL = rY[18];
        // Units: dimensionless; Initial value: 5.986118e-01
        double var_chaste_interface__INaL__hLp = rY[19];
        // Units: dimensionless; Initial value: 3.339899e-01
        double var_chaste_interface__Ito__a = rY[20];
        // Units: dimensionless; Initial value: 7.994042e-04
        double var_chaste_interface__Ito__iF = rY[21];
        // Units: dimensionless; Initial value: 9.997514e-01
        double var_chaste_interface__Ito__iS = rY[22];
        // Units: dimensionless; Initial value: 5.702538e-01
        double var_chaste_interface__Ito__ap = rY[23];
        // Units: dimensionless; Initial value: 4.072777e-04
        double var_chaste_interface__Ito__iFp = rY[24];
        // Units: dimensionless; Initial value: 9.997514e-01
        double var_chaste_interface__Ito__iSp = rY[25];
        // Units: dimensionless; Initial value: 6.351927e-01
        double var_chaste_interface__ICaL__d = rY[26];
        // Units: dimensionless; Initial value: -8.334604e-30
        double var_chaste_interface__ICaL__ff = rY[27];
        // Units: dimensionless; Initial value: 1.000000e+00
        double var_chaste_interface__ICaL__fs = rY[28];
        // Units: dimensionless; Initial value: 9.183587e-01
        double var_chaste_interface__ICaL__fcaf = rY[29];
        // Units: dimensionless; Initial value: 1.000000e+00
        double var_chaste_interface__ICaL__fcas = rY[30];
        // Units: dimensionless; Initial value: 9.997540e-01
        double var_chaste_interface__ICaL__jca = rY[31];
        // Units: dimensionless; Initial value: 9.999743e-01
        double var_chaste_interface__ICaL__ffp = rY[32];
        // Units: dimensionless; Initial value: 1.000000e+00
        double var_chaste_interface__ICaL__fcafp = rY[33];
        // Units: dimensionless; Initial value: 1.000000e+00
        double var_chaste_interface__ICaL__nca_ss = rY[34];
        // Units: dimensionless; Initial value: 5.336520e-04
        double var_chaste_interface__ICaL__nca_i = rY[35];
        // Units: dimensionless; Initial value: 1.257861e-03
        double var_chaste_interface__IKr__O = rY[40];
        // Units: dimensionless; Initial value: 3.445733e-04
        double var_chaste_interface__IKs__xs1 = rY[41];
        // Units: dimensionless; Initial value: 2.642293e-01
        double var_chaste_interface__IKs__xs2 = rY[42];
        // Units: dimensionless; Initial value: 1.327348e-04
        
        // Lookup table indexing
        const bool _oob_0 = CellToRORddynClmidFromCellMLOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = CellToRORddynClmidFromCellMLOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);
        
        const double var_extracellular__nao = 140.0; // millimolar
        const double var_extracellular__cao = 1.8; // millimolar
        const double var_extracellular__ko = 5.0; // millimolar
        const double var_reversal_potentials__ENa = 26.712338705498265 * log(var_extracellular__nao / var_chaste_interface__intracellular_ions__nai); // millivolt
        const double var_CaMK__CaMKb = (mParameters[0] * (1.0 - var_chaste_interface__CaMK__CaMKt)) / (1.0 + (0.0015 / var_chaste_interface__intracellular_ions__cass)); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_INa__fINap = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INa__INa = mParameters[6] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * pow(var_chaste_interface__INa__m, 3.0) * (((1.0 - var_INa__fINap) * var_chaste_interface__INa__h * var_chaste_interface__INa__j) + (var_INa__fINap * var_chaste_interface__INa__hp * var_chaste_interface__INa__jp)); // microA_per_microF
        const double var_INaL__fINaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INaL__INaL = mParameters[8] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * var_chaste_interface__INaL__mL * (((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL) + (var_INaL__fINaLp * var_chaste_interface__INaL__hLp)); // microA_per_microF
        const double var_reversal_potentials__EK = 26.712338705498265 * log(var_extracellular__ko / var_chaste_interface__intracellular_ions__ki); // millivolt
        const double var_Ito__fItop = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_Ito__Ito = (mParameters[13] * 2.0) * (var_chaste_interface__membrane__v - var_reversal_potentials__EK) * (((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * ((_lt_0_row[0] * var_chaste_interface__Ito__iF) + (_lt_0_row[1] * var_chaste_interface__Ito__iS))) + (var_Ito__fItop * var_chaste_interface__Ito__ap * ((_lt_0_row[2] * var_chaste_interface__Ito__iFp) + (_lt_0_row[3] * var_chaste_interface__Ito__iSp)))); // microA_per_microF
        const double var_ICaL__fICaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ICaL__fcap = (_lt_0_row[6] * var_chaste_interface__ICaL__fcafp) + (_lt_0_row[7] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__PCa = mParameters[4] * 2.0; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__fp = (0.59999999999999998 * var_chaste_interface__ICaL__ffp) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__f = (0.59999999999999998 * var_chaste_interface__ICaL__ff) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__Io = (0.5 * (var_extracellular__nao + var_extracellular__ko + 150.0 + (4.0 * var_extracellular__cao))) * 0.001; // dimensionless
        const double var_ICaL__gamma_cao = exp(((sqrt(var_ICaL__Io) / (1.0 + sqrt(var_ICaL__Io))) - (0.29999999999999999 * var_ICaL__Io)) *  -2.095276098912819); // dimensionless
        const double var_ICaL__Iss = (0.5 * (var_chaste_interface__intracellular_ions__nass + var_chaste_interface__intracellular_ions__kss + var_chaste_interface__intracellular_ions__clss + (4.0 * var_chaste_interface__intracellular_ions__cass))) * 0.001; // dimensionless
        const double var_ICaL__PhiCaL_ss = (4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((exp(((sqrt(var_ICaL__Iss) / (1.0 + sqrt(var_ICaL__Iss))) - (0.29999999999999999 * var_ICaL__Iss)) *  -2.095276098912819) * var_chaste_interface__intracellular_ions__cass * _lt_0_row[8]) - (var_ICaL__gamma_cao * var_extracellular__cao))) / _lt_0_row[9]; // dimensionless
        const double var_ICaL__fca = (_lt_0_row[4] * var_chaste_interface__ICaL__fcaf) + (_lt_0_row[5] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__ICaL_ss = 0.80000000000000004 * (((1.0 - var_ICaL__fICaLp) * var_ICaL__PCa * var_ICaL__PhiCaL_ss * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca_ss)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca_ss))) + (var_ICaL__fICaLp * var_ICaL__PCap * var_ICaL__PhiCaL_ss * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca_ss)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca_ss)))); // microA_per_microF
        const double var_ICaL__Ii = (0.5 * (var_chaste_interface__intracellular_ions__nai + var_chaste_interface__intracellular_ions__ki + var_chaste_interface__intracellular_ions__cli + (4.0 * var_chaste_interface__intracellular_ions__cai))) * 0.001; // dimensionless
        const double var_ICaL__gamma_cai = exp(((sqrt(var_ICaL__Ii) / (1.0 + sqrt(var_ICaL__Ii))) - (0.29999999999999999 * var_ICaL__Ii)) *  -2.095276098912819); // dimensionless
        const double var_ICaL__PhiCaL_i = (4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_ICaL__gamma_cai * var_chaste_interface__intracellular_ions__cai * _lt_0_row[14]) - (var_ICaL__gamma_cao * var_extracellular__cao))) / _lt_0_row[15]; // dimensionless
        const double var_ICaL__ICaL_i = 0.19999999999999996 * (((1.0 - var_ICaL__fICaLp) * var_ICaL__PCa * var_ICaL__PhiCaL_i * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca_i)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca_i))) + (var_ICaL__fICaLp * var_ICaL__PCap * var_ICaL__PhiCaL_i * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca_i)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca_i)))); // microA_per_microF
        const double var_ICaL__ICaL = var_ICaL__ICaL_ss + var_ICaL__ICaL_i; // microA_per_microF
        const double var_ICaL__gamma_nao = exp(((sqrt(var_ICaL__Io) / (1.0 + sqrt(var_ICaL__Io))) - (0.29999999999999999 * var_ICaL__Io)) *  -0.52381902472820474); // dimensionless
        const double var_ICaL__PhiCaNa_ss = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((exp(((sqrt(var_ICaL__Iss) / (1.0 + sqrt(var_ICaL__Iss))) - (0.29999999999999999 * var_ICaL__Iss)) *  -0.52381902472820474) * var_chaste_interface__intracellular_ions__nass * _lt_0_row[10]) - (var_ICaL__gamma_nao * var_extracellular__nao))) / _lt_0_row[11]; // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__ICaNa_ss = 0.80000000000000004 * (((1.0 - var_ICaL__fICaLp) * var_ICaL__PCaNa * var_ICaL__PhiCaNa_ss * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca_ss)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca_ss))) + (var_ICaL__fICaLp * var_ICaL__PCaNap * var_ICaL__PhiCaNa_ss * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca_ss)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca_ss)))); // microA_per_microF
        const double var_ICaL__PhiCaNa_i = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((exp(((sqrt(var_ICaL__Ii) / (1.0 + sqrt(var_ICaL__Ii))) - (0.29999999999999999 * var_ICaL__Ii)) *  -0.52381902472820474) * var_chaste_interface__intracellular_ions__nai * _lt_0_row[16]) - (var_ICaL__gamma_nao * var_extracellular__nao))) / _lt_0_row[17]; // dimensionless
        const double var_ICaL__ICaNa_i = 0.19999999999999996 * (((1.0 - var_ICaL__fICaLp) * var_ICaL__PCaNa * var_ICaL__PhiCaNa_i * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca_i)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca_i))) + (var_ICaL__fICaLp * var_ICaL__PCaNap * var_ICaL__PhiCaNa_i * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca_i)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca_i)))); // microA_per_microF
        const double var_ICaL__ICaNa = var_ICaL__ICaNa_ss + var_ICaL__ICaNa_i; // microA_per_microF
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__gamma_ko = exp(((sqrt(var_ICaL__Io) / (1.0 + sqrt(var_ICaL__Io))) - (0.29999999999999999 * var_ICaL__Io)) *  -0.52381902472820474); // dimensionless
        const double var_ICaL__PhiCaK_i = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((exp(((sqrt(var_ICaL__Ii) / (1.0 + sqrt(var_ICaL__Ii))) - (0.29999999999999999 * var_ICaL__Ii)) *  -0.52381902472820474) * var_chaste_interface__intracellular_ions__ki * _lt_0_row[18]) - (var_ICaL__gamma_ko * var_extracellular__ko))) / _lt_0_row[19]; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__ICaK_i = 0.19999999999999996 * (((1.0 - var_ICaL__fICaLp) * var_ICaL__PCaK * var_ICaL__PhiCaK_i * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca_i)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca_i))) + (var_ICaL__fICaLp * var_ICaL__PCaKp * var_ICaL__PhiCaK_i * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca_i)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca_i)))); // microA_per_microF
        const double var_ICaL__PhiCaK_ss = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((exp(((sqrt(var_ICaL__Iss) / (1.0 + sqrt(var_ICaL__Iss))) - (0.29999999999999999 * var_ICaL__Iss)) *  -0.52381902472820474) * var_chaste_interface__intracellular_ions__kss * _lt_0_row[12]) - (var_ICaL__gamma_ko * var_extracellular__ko))) / _lt_0_row[13]; // dimensionless
        const double var_ICaL__ICaK_ss = 0.80000000000000004 * (((1.0 - var_ICaL__fICaLp) * var_ICaL__PCaK * var_ICaL__PhiCaK_ss * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca_ss)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca_ss))) + (var_ICaL__fICaLp * var_ICaL__PCaKp * var_ICaL__PhiCaK_ss * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca_ss)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca_ss)))); // microA_per_microF
        const double var_ICaL__ICaK = var_ICaL__ICaK_ss + var_ICaL__ICaK_i; // microA_per_microF
        const double var_IKr__IKr = (mParameters[9] * 0.80000000000000004) * sqrt(var_extracellular__ko * 0.20000000000000001) * var_chaste_interface__IKr__O * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IKs__IKs = mParameters[10] * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__intracellular_ions__cai, 1.3999999999999999)))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__membrane__v - (26.712338705498265 * log((var_extracellular__ko + (0.018329999999999999 * var_extracellular__nao)) / (var_chaste_interface__intracellular_ions__ki + (0.018329999999999999 * var_chaste_interface__intracellular_ions__nai))))); // microA_per_microF
        const double var_IK1__aK1 = 4.0940000000000003 / (1.0 + exp(0.1217 * ((var_chaste_interface__membrane__v - var_reversal_potentials__EK) - 49.933999999999997))); // dimensionless
        const double var_IK1__IK1 = (mParameters[7] * 1.3) * sqrt(var_extracellular__ko * 0.20000000000000001) * (var_IK1__aK1 / (var_IK1__aK1 + (((15.720000000000001 * exp(0.067400000000000002 * ((var_chaste_interface__membrane__v - var_reversal_potentials__EK) - 3.2570000000000001))) + exp(0.061800000000000001 * ((var_chaste_interface__membrane__v - var_reversal_potentials__EK) - 594.30999999999995))) / (1.0 + exp( -0.16289999999999999 * ((var_chaste_interface__membrane__v - var_reversal_potentials__EK) + 14.207000000000001)))))) * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_INaCa__Gncx = mParameters[11] * 1.3999999999999999; // milliS_per_microF
        const double var_INaCa__h4_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nai * 0.20000000000000001))); // dimensionless
        const double var_INaCa__h1_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.011348161597821153) * _lt_0_row[20]); // dimensionless
        const double var_INaCa__h2_i = (var_chaste_interface__intracellular_ions__nai * _lt_0_row[21]) / (88.120000000000005 * var_INaCa__h1_i); // dimensionless
        const double var_INaCa__k7_i = ((var_chaste_interface__intracellular_ions__nai * var_chaste_interface__intracellular_ions__nai) / (var_INaCa__h4_i * 75.0)) * var_INaCa__h2_i * 60000.0; // dimensionless
        const double var_INaCa__k6_i = (1.0 / var_INaCa__h4_i) * var_chaste_interface__intracellular_ions__cai * 1500000.0; // dimensionless
        const double var_INaCa__h7_i = 1.0 + ((var_extracellular__nao * 0.011348161597821153) * _lt_0_row[22]); // dimensionless
        const double var_INaCa__h8_i = var_extracellular__nao / (88.120000000000005 * _lt_0_row[23] * var_INaCa__h7_i); // dimensionless
        const double var_INaCa__k3pp_i = var_INaCa__h8_i * 5000.0; // dimensionless
        const double var_INaCa__k3_i = ((1.0 / var_INaCa__h7_i) * 60000.0) + var_INaCa__k3pp_i; // dimensionless
        const double var_INaCa__k4pp_i = var_INaCa__h2_i * 5000.0; // dimensionless
        const double var_INaCa__k4_i = (((1.0 / var_INaCa__h1_i) * 60000.0) / _lt_0_row[24]) + var_INaCa__k4pp_i; // dimensionless
        const double var_INaCa__x1_i = (5000.0 * var_INaCa__k4_i * (var_INaCa__k7_i + var_INaCa__k6_i)) + (5000.0 * var_INaCa__k7_i * (5000.0 + var_INaCa__k3_i)); // dimensionless
        const double var_INaCa__h10_i = ((var_extracellular__nao * 0.066666666666666666) * (1.0 + (var_extracellular__nao * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa__k8_i = var_INaCa__h8_i * ((var_extracellular__nao * var_extracellular__nao) / (var_INaCa__h10_i * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa__k1_i = (1.0 / var_INaCa__h10_i) * var_extracellular__cao * 1500000.0; // dimensionless
        const double var_INaCa__x3_i = (var_INaCa__k1_i * var_INaCa__k3_i * (var_INaCa__k7_i + var_INaCa__k6_i)) + (var_INaCa__k8_i * var_INaCa__k6_i * (5000.0 + var_INaCa__k3_i)); // dimensionless
        const double var_INaCa__x2_i = (var_INaCa__k1_i * var_INaCa__k7_i * (var_INaCa__k4_i + 5000.0)) + (var_INaCa__k4_i * var_INaCa__k6_i * (var_INaCa__k1_i + var_INaCa__k8_i)); // dimensionless
        const double var_INaCa__x4_i = (5000.0 * var_INaCa__k8_i * (var_INaCa__k4_i + 5000.0)) + (var_INaCa__k3_i * 5000.0 * (var_INaCa__k1_i + var_INaCa__k8_i)); // dimensionless
        const double var_INaCa__E1_i = var_INaCa__x1_i / (var_INaCa__x1_i + var_INaCa__x2_i + var_INaCa__x3_i + var_INaCa__x4_i); // dimensionless
        const double var_INaCa__E2_i = var_INaCa__x2_i / (var_INaCa__x1_i + var_INaCa__x2_i + var_INaCa__x3_i + var_INaCa__x4_i); // dimensionless
        const double var_INaCa__INaCa_i = 0.65000000000000002 * var_INaCa__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cai, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa__x4_i / (var_INaCa__x1_i + var_INaCa__x2_i + var_INaCa__x3_i + var_INaCa__x4_i)) * var_INaCa__k7_i) - (var_INaCa__E1_i * var_INaCa__k8_i))) + ((var_INaCa__x3_i / (var_INaCa__x1_i + var_INaCa__x2_i + var_INaCa__x3_i + var_INaCa__x4_i)) * var_INaCa__k4pp_i)) - (var_INaCa__E2_i * var_INaCa__k3pp_i))) + (2.0 * ((var_INaCa__E2_i * 5000.0) - (var_INaCa__E1_i * var_INaCa__k1_i)))); // microA_per_microF
        const double var_INaCa__h10_ss = ((var_extracellular__nao * 0.066666666666666666) * (1.0 + (var_extracellular__nao * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa__k1_ss = (1.0 / var_INaCa__h10_ss) * var_extracellular__cao * 1500000.0; // dimensionless
        const double var_INaCa__h4_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nass * 0.20000000000000001))); // dimensionless
        const double var_INaCa__k6_ss = (1.0 / var_INaCa__h4_ss) * var_chaste_interface__intracellular_ions__cass * 1500000.0; // dimensionless
        const double var_INaCa__h7_ss = 1.0 + ((var_extracellular__nao * 0.011348161597821153) * _lt_0_row[27]); // dimensionless
        const double var_INaCa__h8_ss = var_extracellular__nao / (88.120000000000005 * _lt_0_row[28] * var_INaCa__h7_ss); // dimensionless
        const double var_INaCa__k8_ss = var_INaCa__h8_ss * ((var_extracellular__nao * var_extracellular__nao) / (var_INaCa__h10_ss * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa__k3pp_ss = var_INaCa__h8_ss * 5000.0; // dimensionless
        const double var_INaCa__k3_ss = ((1.0 / var_INaCa__h7_ss) * 60000.0) + var_INaCa__k3pp_ss; // dimensionless
        const double var_INaCa__h1_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.011348161597821153) * _lt_0_row[25]); // dimensionless
        const double var_INaCa__h2_ss = (var_chaste_interface__intracellular_ions__nass * _lt_0_row[26]) / (88.120000000000005 * var_INaCa__h1_ss); // dimensionless
        const double var_INaCa__k7_ss = ((var_chaste_interface__intracellular_ions__nass * var_chaste_interface__intracellular_ions__nass) / (var_INaCa__h4_ss * 75.0)) * var_INaCa__h2_ss * 60000.0; // dimensionless
        const double var_INaCa__x3_ss = (var_INaCa__k1_ss * var_INaCa__k3_ss * (var_INaCa__k7_ss + var_INaCa__k6_ss)) + (var_INaCa__k8_ss * var_INaCa__k6_ss * (5000.0 + var_INaCa__k3_ss)); // dimensionless
        const double var_INaCa__k4pp_ss = var_INaCa__h2_ss * 5000.0; // dimensionless
        const double var_INaCa__k4_ss = (((1.0 / var_INaCa__h1_ss) * 60000.0) / _lt_0_row[29]) + var_INaCa__k4pp_ss; // dimensionless
        const double var_INaCa__x2_ss = (var_INaCa__k1_ss * var_INaCa__k7_ss * (var_INaCa__k4_ss + 5000.0)) + (var_INaCa__k4_ss * var_INaCa__k6_ss * (var_INaCa__k1_ss + var_INaCa__k8_ss)); // dimensionless
        const double var_INaCa__x4_ss = (5000.0 * var_INaCa__k8_ss * (var_INaCa__k4_ss + 5000.0)) + (var_INaCa__k3_ss * 5000.0 * (var_INaCa__k1_ss + var_INaCa__k8_ss)); // dimensionless
        const double var_INaCa__x1_ss = (5000.0 * var_INaCa__k4_ss * (var_INaCa__k7_ss + var_INaCa__k6_ss)) + (5000.0 * var_INaCa__k7_ss * (5000.0 + var_INaCa__k3_ss)); // dimensionless
        const double var_INaCa__E2_ss = var_INaCa__x2_ss / (var_INaCa__x1_ss + var_INaCa__x2_ss + var_INaCa__x3_ss + var_INaCa__x4_ss); // dimensionless
        const double var_INaCa__E1_ss = var_INaCa__x1_ss / (var_INaCa__x1_ss + var_INaCa__x2_ss + var_INaCa__x3_ss + var_INaCa__x4_ss); // dimensionless
        const double var_INaCa__INaCa_ss = 0.34999999999999998 * var_INaCa__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cass, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa__x4_ss / (var_INaCa__x1_ss + var_INaCa__x2_ss + var_INaCa__x3_ss + var_INaCa__x4_ss)) * var_INaCa__k7_ss) - (var_INaCa__E1_ss * var_INaCa__k8_ss))) + ((var_INaCa__x3_ss / (var_INaCa__x1_ss + var_INaCa__x2_ss + var_INaCa__x3_ss + var_INaCa__x4_ss)) * var_INaCa__k4pp_ss)) - (var_INaCa__E2_ss * var_INaCa__k3pp_ss))) + (2.0 * ((var_INaCa__E2_ss * 5000.0) - (var_INaCa__E1_ss * var_INaCa__k1_ss)))); // microA_per_microF
        const double var_INaK__b3 = ((4.2000000000000002 / ((var_chaste_interface__intracellular_ions__nai * 0.004464285714285714) + (var_chaste_interface__intracellular_ions__ki * 0.0034246575342465752) + 1.5889281507656066)) * 0.0079299999999999995) * 1.732653031203624e-08; // dimensionless
        const double var_INaK__a3 = (1899.0 * pow(var_extracellular__ko * 2.7917364600781687, 2.0)) / ((pow(1.0 + (var_extracellular__nao / _lt_0_row[34]), 3.0) + pow(1.0 + (var_extracellular__ko * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__b2 = (39.399999999999999 * pow(var_extracellular__nao / _lt_0_row[32], 3.0)) / ((pow(1.0 + (var_extracellular__nao / _lt_0_row[33]), 3.0) + pow(1.0 + (var_extracellular__ko * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x3 = (var_INaK__a3 * 439120.79239156022) + (var_INaK__b3 * var_INaK__b2 * 9.120000000000001) + (var_INaK__b2 * 5827.679899026527) + (var_INaK__a3 * 5827.679899026527); // dimensionless
        const double var_INaK__b4 = (40.0 * pow(var_chaste_interface__intracellular_ions__ki * 2.0, 2.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[35]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__a1 = (949.5 * pow(var_chaste_interface__intracellular_ions__nai / _lt_0_row[30], 3.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[31]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x2 = (var_INaK__b2 * 9.120000000000001 * var_INaK__b4) + (var_INaK__a1 * 687.20000000000005 * var_INaK__a3) + (var_INaK__a3 * 9.120000000000001 * var_INaK__b4) + (687.20000000000005 * var_INaK__a3 * var_INaK__b4); // dimensionless
        const double var_INaK__x1 = (var_INaK__a1 * 439120.79239156022) + (var_INaK__b2 * var_INaK__b4 * var_INaK__b3) + (687.20000000000005 * var_INaK__b4 * var_INaK__b3) + (var_INaK__b3 * var_INaK__a1 * 687.20000000000005); // dimensionless
        const double var_INaK__x4 = (var_INaK__b4 * var_INaK__b3 * var_INaK__b2) + (var_INaK__a3 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b2 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b3 * var_INaK__b2 * var_INaK__a1); // dimensionless
        const double var_INaK__INaK = (mParameters[12] * 0.69999999999999996) * ((1.0 * (3.0 * (((var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a3) - ((var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__b3)))) + (1.0 * (2.0 * (((var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * 9.120000000000001) - ((var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a1))))); // microA_per_microF
        const double var_INab__INab = (1.9238999999999999e-09 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__nai * _lt_0_row[37]) - var_extracellular__nao)) / _lt_0_row[38]; // microA_per_microF
        const double var_IKb__IKb = 0.0189 * _lt_0_row[36] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IpCa__IpCa = (0.00050000000000000001 * var_chaste_interface__intracellular_ions__cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_ICab__ICab = (((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_ICaL__gamma_cai * var_chaste_interface__intracellular_ions__cai * _lt_0_row[39]) - (var_ICaL__gamma_cao * var_extracellular__cao)) * 2.36776e-07) / _lt_0_row[40]; // microA_per_microF
        const double var_ICl__IClCa_junc = (0.2843 / (1.0 + (0.10000000000000001 / var_chaste_interface__intracellular_ions__cass))) * (var_chaste_interface__membrane__v - ( -26.712338705498265 * log(150.0 / var_chaste_interface__intracellular_ions__clss))); // microA_per_microF
        const double var_reversal_potentials__ECl =  -26.712338705498265 * log(150.0 / var_chaste_interface__intracellular_ions__cli); // millivolt
        const double var_ICl__IClCa_sl = (0.0 / (1.0 + (0.10000000000000001 / var_chaste_interface__intracellular_ions__cai))) * (var_chaste_interface__membrane__v - var_reversal_potentials__ECl); // microA_per_microF
        const double var_ICl__IClCa = var_ICl__IClCa_junc + var_ICl__IClCa_sl; // microA_per_microF
        const double var_ICl__IClb = 0.00198 * (var_chaste_interface__membrane__v - var_reversal_potentials__ECl); // microA_per_microF
        const double var_I_katp__I_katp = mParameters[5] * pow(var_extracellular__ko * 0.20000000000000001, 0.23999999999999999) * (var_chaste_interface__membrane__v - var_reversal_potentials__EK) * 0.066453846153846155; // microA_per_microF
        const double var_chaste_interface__ICaL__ICaL = var_ICaL__ICaL; // microA_per_microF
        const double var_chaste_interface__INa__INa = var_INa__INa; // microA_per_microF
        const double var_chaste_interface__IKs__IKs = var_IKs__IKs; // microA_per_microF
        const double var_chaste_interface__INaL__INaL = var_INaL__INaL; // microA_per_microF
        const double var_chaste_interface__INaK__INaK = var_INaK__INaK; // microA_per_microF
        const double var_chaste_interface__I_katp__I_katp = var_I_katp__I_katp; // microA_per_microF
        const double var_chaste_interface__IK1__IK1 = var_IK1__IK1; // microA_per_microF
        const double var_chaste_interface__Ito__Ito = var_Ito__Ito; // microA_per_microF
        const double var_chaste_interface__IKr__IKr = var_IKr__IKr; // microA_per_microF
        const double var_chaste_interface__IpCa__IpCa = var_IpCa__IpCa; // microA_per_microF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__INa__INa + var_chaste_interface__INaL__INaL + var_chaste_interface__Ito__Ito + var_chaste_interface__ICaL__ICaL + var_ICaL__ICaNa + var_ICaL__ICaK + var_chaste_interface__IKr__IKr + var_chaste_interface__IKs__IKs + var_chaste_interface__IK1__IK1 + var_INaCa__INaCa_i + var_INaCa__INaCa_ss + var_chaste_interface__INaK__INaK + var_INab__INab + var_IKb__IKb + var_chaste_interface__IpCa__IpCa + var_ICab__ICab + var_ICl__IClCa + var_ICl__IClb + var_chaste_interface__I_katp__I_katp) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void CellToRORddynClmidFromCellMLOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time, const std::vector<double>& rY, std::vector<double>& rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -9.133918e+01
        double var_chaste_interface__intracellular_ions__cai = rY[1];
        // Units: millimolar; Initial value: 8.297576e-05
        double var_chaste_interface__CaMK__CaMKt = rY[2];
        // Units: millimolar; Initial value: 2.018820e-02
        double var_chaste_interface__intracellular_ions__nai = rY[3];
        // Units: millimolar; Initial value: 1.594867e+01
        double var_chaste_interface__intracellular_ions__nass = rY[4];
        // Units: millimolar; Initial value: 1.594922e+01
        double var_chaste_interface__intracellular_ions__ki = rY[5];
        // Units: millimolar; Initial value: 1.567131e+02
        double var_chaste_interface__intracellular_ions__kss = rY[6];
        // Units: millimolar; Initial value: 1.567130e+02
        double var_chaste_interface__intracellular_ions__cass = rY[7];
        // Units: millimolar; Initial value: 6.642187e-05
        double var_chaste_interface__intracellular_ions__cansr = rY[8];
        // Units: millimolar; Initial value: 2.012225e+00
        double var_chaste_interface__intracellular_ions__cajsr = rY[9];
        // Units: millimolar; Initial value: 2.016415e+00
        double var_chaste_interface__intracellular_ions__cli = rY[10];
        // Units: millimolar; Initial value: 4.891277e+01
        double var_chaste_interface__intracellular_ions__clss = rY[11];
        // Units: millimolar; Initial value: 4.891274e+01
        double var_chaste_interface__INa__m = rY[12];
        // Units: dimensionless; Initial value: 4.619565e-04
        double var_chaste_interface__INa__h = rY[13];
        // Units: dimensionless; Initial value: 8.739077e-01
        double var_chaste_interface__INa__j = rY[14];
        // Units: dimensionless; Initial value: 8.737841e-01
        double var_chaste_interface__INa__hp = rY[15];
        // Units: dimensionless; Initial value: 7.478972e-01
        double var_chaste_interface__INa__jp = rY[16];
        // Units: dimensionless; Initial value: 8.735375e-01
        double var_chaste_interface__INaL__mL = rY[17];
        // Units: dimensionless; Initial value: 9.987709e-05
        double var_chaste_interface__INaL__hL = rY[18];
        // Units: dimensionless; Initial value: 5.986118e-01
        double var_chaste_interface__INaL__hLp = rY[19];
        // Units: dimensionless; Initial value: 3.339899e-01
        double var_chaste_interface__Ito__a = rY[20];
        // Units: dimensionless; Initial value: 7.994042e-04
        double var_chaste_interface__Ito__iF = rY[21];
        // Units: dimensionless; Initial value: 9.997514e-01
        double var_chaste_interface__Ito__iS = rY[22];
        // Units: dimensionless; Initial value: 5.702538e-01
        double var_chaste_interface__Ito__ap = rY[23];
        // Units: dimensionless; Initial value: 4.072777e-04
        double var_chaste_interface__Ito__iFp = rY[24];
        // Units: dimensionless; Initial value: 9.997514e-01
        double var_chaste_interface__Ito__iSp = rY[25];
        // Units: dimensionless; Initial value: 6.351927e-01
        double var_chaste_interface__ICaL__d = rY[26];
        // Units: dimensionless; Initial value: -8.334604e-30
        double var_chaste_interface__ICaL__ff = rY[27];
        // Units: dimensionless; Initial value: 1.000000e+00
        double var_chaste_interface__ICaL__fs = rY[28];
        // Units: dimensionless; Initial value: 9.183587e-01
        double var_chaste_interface__ICaL__fcaf = rY[29];
        // Units: dimensionless; Initial value: 1.000000e+00
        double var_chaste_interface__ICaL__fcas = rY[30];
        // Units: dimensionless; Initial value: 9.997540e-01
        double var_chaste_interface__ICaL__jca = rY[31];
        // Units: dimensionless; Initial value: 9.999743e-01
        double var_chaste_interface__ICaL__ffp = rY[32];
        // Units: dimensionless; Initial value: 1.000000e+00
        double var_chaste_interface__ICaL__fcafp = rY[33];
        // Units: dimensionless; Initial value: 1.000000e+00
        double var_chaste_interface__ICaL__nca_ss = rY[34];
        // Units: dimensionless; Initial value: 5.336520e-04
        double var_chaste_interface__ICaL__nca_i = rY[35];
        // Units: dimensionless; Initial value: 1.257861e-03
        double var_chaste_interface__IKr__C1 = rY[36];
        // Units: dimensionless; Initial value: 9.983451e-01
        double var_chaste_interface__IKr__C2 = rY[37];
        // Units: dimensionless; Initial value: 7.086460e-04
        double var_chaste_interface__IKr__C3 = rY[38];
        // Units: dimensionless; Initial value: 5.910047e-04
        double var_chaste_interface__IKr__I = rY[39];
        // Units: dimensionless; Initial value: 1.064230e-05
        double var_chaste_interface__IKr__O = rY[40];
        // Units: dimensionless; Initial value: 3.445733e-04
        double var_chaste_interface__IKs__xs1 = rY[41];
        // Units: dimensionless; Initial value: 2.642293e-01
        double var_chaste_interface__IKs__xs2 = rY[42];
        // Units: dimensionless; Initial value: 1.327348e-04
        double var_chaste_interface__ryr__Jrel_np = rY[43];
        // Units: millimolar_per_millisecond; Initial value: -1.300486e-21
        double var_chaste_interface__ryr__Jrel_p = rY[44];
        // Units: millimolar_per_millisecond; Initial value: -7.610714e-20
        
        
        // Lookup table indexing
        const bool _oob_0 = CellToRORddynClmidFromCellMLOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = CellToRORddynClmidFromCellMLOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);
        
        // Mathematics
        double d_dt_chaste_interface__membrane__v;
        const double var_extracellular__nao = 140.0; // millimolar
        const double var_extracellular__cao = 1.8; // millimolar
        const double var_extracellular__ko = 5.0; // millimolar
        const double var_reversal_potentials__ENa = 26.712338705498265 * log(var_extracellular__nao / var_chaste_interface__intracellular_ions__nai); // millivolt
        const double var_CaMK__CaMKb = (mParameters[0] * (1.0 - var_chaste_interface__CaMK__CaMKt)) / (1.0 + (0.0015 / var_chaste_interface__intracellular_ions__cass)); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_INa__fINap = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INa__INa = mParameters[6] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * pow(var_chaste_interface__INa__m, 3.0) * (((1.0 - var_INa__fINap) * var_chaste_interface__INa__h * var_chaste_interface__INa__j) + (var_INa__fINap * var_chaste_interface__INa__hp * var_chaste_interface__INa__jp)); // microA_per_microF
        const double var_INaL__fINaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INaL__INaL = mParameters[8] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * var_chaste_interface__INaL__mL * (((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL) + (var_INaL__fINaLp * var_chaste_interface__INaL__hLp)); // microA_per_microF
        const double var_reversal_potentials__EK = 26.712338705498265 * log(var_extracellular__ko / var_chaste_interface__intracellular_ions__ki); // millivolt
        const double var_Ito__fItop = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_Ito__Ito = (mParameters[13] * 2.0) * (var_chaste_interface__membrane__v - var_reversal_potentials__EK) * (((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * ((_lt_0_row[0] * var_chaste_interface__Ito__iF) + (_lt_0_row[1] * var_chaste_interface__Ito__iS))) + (var_Ito__fItop * var_chaste_interface__Ito__ap * ((_lt_0_row[2] * var_chaste_interface__Ito__iFp) + (_lt_0_row[3] * var_chaste_interface__Ito__iSp)))); // microA_per_microF
        const double var_ICaL__fICaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ICaL__fcap = (_lt_0_row[6] * var_chaste_interface__ICaL__fcafp) + (_lt_0_row[7] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__PCa = mParameters[4] * 2.0; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__fp = (0.59999999999999998 * var_chaste_interface__ICaL__ffp) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__f = (0.59999999999999998 * var_chaste_interface__ICaL__ff) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__Io = (0.5 * (var_extracellular__nao + var_extracellular__ko + 150.0 + (4.0 * var_extracellular__cao))) * 0.001; // dimensionless
        const double var_ICaL__gamma_cao = exp(((sqrt(var_ICaL__Io) / (1.0 + sqrt(var_ICaL__Io))) - (0.29999999999999999 * var_ICaL__Io)) *  -2.095276098912819); // dimensionless
        const double var_ICaL__Iss = (0.5 * (var_chaste_interface__intracellular_ions__nass + var_chaste_interface__intracellular_ions__kss + var_chaste_interface__intracellular_ions__clss + (4.0 * var_chaste_interface__intracellular_ions__cass))) * 0.001; // dimensionless
        const double var_ICaL__PhiCaL_ss = (4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((exp(((sqrt(var_ICaL__Iss) / (1.0 + sqrt(var_ICaL__Iss))) - (0.29999999999999999 * var_ICaL__Iss)) *  -2.095276098912819) * var_chaste_interface__intracellular_ions__cass * _lt_0_row[8]) - (var_ICaL__gamma_cao * var_extracellular__cao))) / _lt_0_row[9]; // dimensionless
        const double var_ICaL__fca = (_lt_0_row[4] * var_chaste_interface__ICaL__fcaf) + (_lt_0_row[5] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__ICaL_ss = 0.80000000000000004 * (((1.0 - var_ICaL__fICaLp) * var_ICaL__PCa * var_ICaL__PhiCaL_ss * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca_ss)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca_ss))) + (var_ICaL__fICaLp * var_ICaL__PCap * var_ICaL__PhiCaL_ss * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca_ss)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca_ss)))); // microA_per_microF
        const double var_ICaL__Ii = (0.5 * (var_chaste_interface__intracellular_ions__nai + var_chaste_interface__intracellular_ions__ki + var_chaste_interface__intracellular_ions__cli + (4.0 * var_chaste_interface__intracellular_ions__cai))) * 0.001; // dimensionless
        const double var_ICaL__gamma_cai = exp(((sqrt(var_ICaL__Ii) / (1.0 + sqrt(var_ICaL__Ii))) - (0.29999999999999999 * var_ICaL__Ii)) *  -2.095276098912819); // dimensionless
        const double var_ICaL__PhiCaL_i = (4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_ICaL__gamma_cai * var_chaste_interface__intracellular_ions__cai * _lt_0_row[14]) - (var_ICaL__gamma_cao * var_extracellular__cao))) / _lt_0_row[15]; // dimensionless
        const double var_ICaL__ICaL_i = 0.19999999999999996 * (((1.0 - var_ICaL__fICaLp) * var_ICaL__PCa * var_ICaL__PhiCaL_i * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca_i)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca_i))) + (var_ICaL__fICaLp * var_ICaL__PCap * var_ICaL__PhiCaL_i * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca_i)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca_i)))); // microA_per_microF
        const double var_ICaL__gamma_nao = exp(((sqrt(var_ICaL__Io) / (1.0 + sqrt(var_ICaL__Io))) - (0.29999999999999999 * var_ICaL__Io)) *  -0.52381902472820474); // dimensionless
        const double var_ICaL__PhiCaNa_ss = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((exp(((sqrt(var_ICaL__Iss) / (1.0 + sqrt(var_ICaL__Iss))) - (0.29999999999999999 * var_ICaL__Iss)) *  -0.52381902472820474) * var_chaste_interface__intracellular_ions__nass * _lt_0_row[10]) - (var_ICaL__gamma_nao * var_extracellular__nao))) / _lt_0_row[11]; // dimensionless
        const double var_ICaL__PCaNa = 0.00125 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__PCaNap = 0.00125 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__ICaNa_ss = 0.80000000000000004 * (((1.0 - var_ICaL__fICaLp) * var_ICaL__PCaNa * var_ICaL__PhiCaNa_ss * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca_ss)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca_ss))) + (var_ICaL__fICaLp * var_ICaL__PCaNap * var_ICaL__PhiCaNa_ss * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca_ss)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca_ss)))); // microA_per_microF
        const double var_ICaL__PhiCaNa_i = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((exp(((sqrt(var_ICaL__Ii) / (1.0 + sqrt(var_ICaL__Ii))) - (0.29999999999999999 * var_ICaL__Ii)) *  -0.52381902472820474) * var_chaste_interface__intracellular_ions__nai * _lt_0_row[16]) - (var_ICaL__gamma_nao * var_extracellular__nao))) / _lt_0_row[17]; // dimensionless
        const double var_ICaL__ICaNa_i = 0.19999999999999996 * (((1.0 - var_ICaL__fICaLp) * var_ICaL__PCaNa * var_ICaL__PhiCaNa_i * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca_i)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca_i))) + (var_ICaL__fICaLp * var_ICaL__PCaNap * var_ICaL__PhiCaNa_i * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca_i)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca_i)))); // microA_per_microF
        const double var_ICaL__PCaK = 0.00035740000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__gamma_ko = exp(((sqrt(var_ICaL__Io) / (1.0 + sqrt(var_ICaL__Io))) - (0.29999999999999999 * var_ICaL__Io)) *  -0.52381902472820474); // dimensionless
        const double var_ICaL__PhiCaK_i = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((exp(((sqrt(var_ICaL__Ii) / (1.0 + sqrt(var_ICaL__Ii))) - (0.29999999999999999 * var_ICaL__Ii)) *  -0.52381902472820474) * var_chaste_interface__intracellular_ions__ki * _lt_0_row[18]) - (var_ICaL__gamma_ko * var_extracellular__ko))) / _lt_0_row[19]; // dimensionless
        const double var_ICaL__PCaKp = 0.00035740000000000001 * var_ICaL__PCap; // dimensionless
        const double var_ICaL__ICaK_i = 0.19999999999999996 * (((1.0 - var_ICaL__fICaLp) * var_ICaL__PCaK * var_ICaL__PhiCaK_i * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca_i)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca_i))) + (var_ICaL__fICaLp * var_ICaL__PCaKp * var_ICaL__PhiCaK_i * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca_i)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca_i)))); // microA_per_microF
        const double var_ICaL__PhiCaK_ss = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((exp(((sqrt(var_ICaL__Iss) / (1.0 + sqrt(var_ICaL__Iss))) - (0.29999999999999999 * var_ICaL__Iss)) *  -0.52381902472820474) * var_chaste_interface__intracellular_ions__kss * _lt_0_row[12]) - (var_ICaL__gamma_ko * var_extracellular__ko))) / _lt_0_row[13]; // dimensionless
        const double var_ICaL__ICaK_ss = 0.80000000000000004 * (((1.0 - var_ICaL__fICaLp) * var_ICaL__PCaK * var_ICaL__PhiCaK_ss * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca_ss)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca_ss))) + (var_ICaL__fICaLp * var_ICaL__PCaKp * var_ICaL__PhiCaK_ss * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca_ss)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca_ss)))); // microA_per_microF
        const double var_IKr__IKr = (mParameters[9] * 0.80000000000000004) * sqrt(var_extracellular__ko * 0.20000000000000001) * var_chaste_interface__IKr__O * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IKs__IKs = mParameters[10] * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__intracellular_ions__cai, 1.3999999999999999)))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__membrane__v - (26.712338705498265 * log((var_extracellular__ko + (0.018329999999999999 * var_extracellular__nao)) / (var_chaste_interface__intracellular_ions__ki + (0.018329999999999999 * var_chaste_interface__intracellular_ions__nai))))); // microA_per_microF
        const double var_IK1__aK1 = 4.0940000000000003 / (1.0 + exp(0.1217 * ((var_chaste_interface__membrane__v - var_reversal_potentials__EK) - 49.933999999999997))); // dimensionless
        const double var_IK1__IK1 = (mParameters[7] * 1.3) * sqrt(var_extracellular__ko * 0.20000000000000001) * (var_IK1__aK1 / (var_IK1__aK1 + (((15.720000000000001 * exp(0.067400000000000002 * ((var_chaste_interface__membrane__v - var_reversal_potentials__EK) - 3.2570000000000001))) + exp(0.061800000000000001 * ((var_chaste_interface__membrane__v - var_reversal_potentials__EK) - 594.30999999999995))) / (1.0 + exp( -0.16289999999999999 * ((var_chaste_interface__membrane__v - var_reversal_potentials__EK) + 14.207000000000001)))))) * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_INaCa__Gncx = mParameters[11] * 1.3999999999999999; // milliS_per_microF
        const double var_INaCa__h4_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nai * 0.20000000000000001))); // dimensionless
        const double var_INaCa__h1_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.011348161597821153) * _lt_0_row[20]); // dimensionless
        const double var_INaCa__h2_i = (var_chaste_interface__intracellular_ions__nai * _lt_0_row[21]) / (88.120000000000005 * var_INaCa__h1_i); // dimensionless
        const double var_INaCa__k7_i = ((var_chaste_interface__intracellular_ions__nai * var_chaste_interface__intracellular_ions__nai) / (var_INaCa__h4_i * 75.0)) * var_INaCa__h2_i * 60000.0; // dimensionless
        const double var_INaCa__k6_i = (1.0 / var_INaCa__h4_i) * var_chaste_interface__intracellular_ions__cai * 1500000.0; // dimensionless
        const double var_INaCa__h7_i = 1.0 + ((var_extracellular__nao * 0.011348161597821153) * _lt_0_row[22]); // dimensionless
        const double var_INaCa__h8_i = var_extracellular__nao / (88.120000000000005 * _lt_0_row[23] * var_INaCa__h7_i); // dimensionless
        const double var_INaCa__k3pp_i = var_INaCa__h8_i * 5000.0; // dimensionless
        const double var_INaCa__k3_i = ((1.0 / var_INaCa__h7_i) * 60000.0) + var_INaCa__k3pp_i; // dimensionless
        const double var_INaCa__k4pp_i = var_INaCa__h2_i * 5000.0; // dimensionless
        const double var_INaCa__k4_i = (((1.0 / var_INaCa__h1_i) * 60000.0) / _lt_0_row[24]) + var_INaCa__k4pp_i; // dimensionless
        const double var_INaCa__x1_i = (5000.0 * var_INaCa__k4_i * (var_INaCa__k7_i + var_INaCa__k6_i)) + (5000.0 * var_INaCa__k7_i * (5000.0 + var_INaCa__k3_i)); // dimensionless
        const double var_INaCa__h10_i = ((var_extracellular__nao * 0.066666666666666666) * (1.0 + (var_extracellular__nao * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa__k8_i = var_INaCa__h8_i * ((var_extracellular__nao * var_extracellular__nao) / (var_INaCa__h10_i * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa__k1_i = (1.0 / var_INaCa__h10_i) * var_extracellular__cao * 1500000.0; // dimensionless
        const double var_INaCa__x3_i = (var_INaCa__k1_i * var_INaCa__k3_i * (var_INaCa__k7_i + var_INaCa__k6_i)) + (var_INaCa__k8_i * var_INaCa__k6_i * (5000.0 + var_INaCa__k3_i)); // dimensionless
        const double var_INaCa__x2_i = (var_INaCa__k1_i * var_INaCa__k7_i * (var_INaCa__k4_i + 5000.0)) + (var_INaCa__k4_i * var_INaCa__k6_i * (var_INaCa__k1_i + var_INaCa__k8_i)); // dimensionless
        const double var_INaCa__x4_i = (5000.0 * var_INaCa__k8_i * (var_INaCa__k4_i + 5000.0)) + (var_INaCa__k3_i * 5000.0 * (var_INaCa__k1_i + var_INaCa__k8_i)); // dimensionless
        const double var_INaCa__E1_i = var_INaCa__x1_i / (var_INaCa__x1_i + var_INaCa__x2_i + var_INaCa__x3_i + var_INaCa__x4_i); // dimensionless
        const double var_INaCa__E2_i = var_INaCa__x2_i / (var_INaCa__x1_i + var_INaCa__x2_i + var_INaCa__x3_i + var_INaCa__x4_i); // dimensionless
        const double var_INaCa__INaCa_i = 0.65000000000000002 * var_INaCa__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cai, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa__x4_i / (var_INaCa__x1_i + var_INaCa__x2_i + var_INaCa__x3_i + var_INaCa__x4_i)) * var_INaCa__k7_i) - (var_INaCa__E1_i * var_INaCa__k8_i))) + ((var_INaCa__x3_i / (var_INaCa__x1_i + var_INaCa__x2_i + var_INaCa__x3_i + var_INaCa__x4_i)) * var_INaCa__k4pp_i)) - (var_INaCa__E2_i * var_INaCa__k3pp_i))) + (2.0 * ((var_INaCa__E2_i * 5000.0) - (var_INaCa__E1_i * var_INaCa__k1_i)))); // microA_per_microF
        const double var_INaCa__h10_ss = ((var_extracellular__nao * 0.066666666666666666) * (1.0 + (var_extracellular__nao * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa__k1_ss = (1.0 / var_INaCa__h10_ss) * var_extracellular__cao * 1500000.0; // dimensionless
        const double var_INaCa__h4_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nass * 0.20000000000000001))); // dimensionless
        const double var_INaCa__k6_ss = (1.0 / var_INaCa__h4_ss) * var_chaste_interface__intracellular_ions__cass * 1500000.0; // dimensionless
        const double var_INaCa__h7_ss = 1.0 + ((var_extracellular__nao * 0.011348161597821153) * _lt_0_row[27]); // dimensionless
        const double var_INaCa__h8_ss = var_extracellular__nao / (88.120000000000005 * _lt_0_row[28] * var_INaCa__h7_ss); // dimensionless
        const double var_INaCa__k8_ss = var_INaCa__h8_ss * ((var_extracellular__nao * var_extracellular__nao) / (var_INaCa__h10_ss * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa__k3pp_ss = var_INaCa__h8_ss * 5000.0; // dimensionless
        const double var_INaCa__k3_ss = ((1.0 / var_INaCa__h7_ss) * 60000.0) + var_INaCa__k3pp_ss; // dimensionless
        const double var_INaCa__h1_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.011348161597821153) * _lt_0_row[25]); // dimensionless
        const double var_INaCa__h2_ss = (var_chaste_interface__intracellular_ions__nass * _lt_0_row[26]) / (88.120000000000005 * var_INaCa__h1_ss); // dimensionless
        const double var_INaCa__k7_ss = ((var_chaste_interface__intracellular_ions__nass * var_chaste_interface__intracellular_ions__nass) / (var_INaCa__h4_ss * 75.0)) * var_INaCa__h2_ss * 60000.0; // dimensionless
        const double var_INaCa__x3_ss = (var_INaCa__k1_ss * var_INaCa__k3_ss * (var_INaCa__k7_ss + var_INaCa__k6_ss)) + (var_INaCa__k8_ss * var_INaCa__k6_ss * (5000.0 + var_INaCa__k3_ss)); // dimensionless
        const double var_INaCa__k4pp_ss = var_INaCa__h2_ss * 5000.0; // dimensionless
        const double var_INaCa__k4_ss = (((1.0 / var_INaCa__h1_ss) * 60000.0) / _lt_0_row[29]) + var_INaCa__k4pp_ss; // dimensionless
        const double var_INaCa__x2_ss = (var_INaCa__k1_ss * var_INaCa__k7_ss * (var_INaCa__k4_ss + 5000.0)) + (var_INaCa__k4_ss * var_INaCa__k6_ss * (var_INaCa__k1_ss + var_INaCa__k8_ss)); // dimensionless
        const double var_INaCa__x4_ss = (5000.0 * var_INaCa__k8_ss * (var_INaCa__k4_ss + 5000.0)) + (var_INaCa__k3_ss * 5000.0 * (var_INaCa__k1_ss + var_INaCa__k8_ss)); // dimensionless
        const double var_INaCa__x1_ss = (5000.0 * var_INaCa__k4_ss * (var_INaCa__k7_ss + var_INaCa__k6_ss)) + (5000.0 * var_INaCa__k7_ss * (5000.0 + var_INaCa__k3_ss)); // dimensionless
        const double var_INaCa__E2_ss = var_INaCa__x2_ss / (var_INaCa__x1_ss + var_INaCa__x2_ss + var_INaCa__x3_ss + var_INaCa__x4_ss); // dimensionless
        const double var_INaCa__E1_ss = var_INaCa__x1_ss / (var_INaCa__x1_ss + var_INaCa__x2_ss + var_INaCa__x3_ss + var_INaCa__x4_ss); // dimensionless
        const double var_INaCa__INaCa_ss = 0.34999999999999998 * var_INaCa__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cass, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa__x4_ss / (var_INaCa__x1_ss + var_INaCa__x2_ss + var_INaCa__x3_ss + var_INaCa__x4_ss)) * var_INaCa__k7_ss) - (var_INaCa__E1_ss * var_INaCa__k8_ss))) + ((var_INaCa__x3_ss / (var_INaCa__x1_ss + var_INaCa__x2_ss + var_INaCa__x3_ss + var_INaCa__x4_ss)) * var_INaCa__k4pp_ss)) - (var_INaCa__E2_ss * var_INaCa__k3pp_ss))) + (2.0 * ((var_INaCa__E2_ss * 5000.0) - (var_INaCa__E1_ss * var_INaCa__k1_ss)))); // microA_per_microF
        const double var_INaK__b3 = ((4.2000000000000002 / ((var_chaste_interface__intracellular_ions__nai * 0.004464285714285714) + (var_chaste_interface__intracellular_ions__ki * 0.0034246575342465752) + 1.5889281507656066)) * 0.0079299999999999995) * 1.732653031203624e-08; // dimensionless
        const double var_INaK__a3 = (1899.0 * pow(var_extracellular__ko * 2.7917364600781687, 2.0)) / ((pow(1.0 + (var_extracellular__nao / _lt_0_row[34]), 3.0) + pow(1.0 + (var_extracellular__ko * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__b2 = (39.399999999999999 * pow(var_extracellular__nao / _lt_0_row[32], 3.0)) / ((pow(1.0 + (var_extracellular__nao / _lt_0_row[33]), 3.0) + pow(1.0 + (var_extracellular__ko * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x3 = (var_INaK__a3 * 439120.79239156022) + (var_INaK__b3 * var_INaK__b2 * 9.120000000000001) + (var_INaK__b2 * 5827.679899026527) + (var_INaK__a3 * 5827.679899026527); // dimensionless
        const double var_INaK__b4 = (40.0 * pow(var_chaste_interface__intracellular_ions__ki * 2.0, 2.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[35]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__a1 = (949.5 * pow(var_chaste_interface__intracellular_ions__nai / _lt_0_row[30], 3.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[31]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x2 = (var_INaK__b2 * 9.120000000000001 * var_INaK__b4) + (var_INaK__a1 * 687.20000000000005 * var_INaK__a3) + (var_INaK__a3 * 9.120000000000001 * var_INaK__b4) + (687.20000000000005 * var_INaK__a3 * var_INaK__b4); // dimensionless
        const double var_INaK__x1 = (var_INaK__a1 * 439120.79239156022) + (var_INaK__b2 * var_INaK__b4 * var_INaK__b3) + (687.20000000000005 * var_INaK__b4 * var_INaK__b3) + (var_INaK__b3 * var_INaK__a1 * 687.20000000000005); // dimensionless
        const double var_INaK__x4 = (var_INaK__b4 * var_INaK__b3 * var_INaK__b2) + (var_INaK__a3 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b2 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b3 * var_INaK__b2 * var_INaK__a1); // dimensionless
        const double var_INaK__INaK = (mParameters[12] * 0.69999999999999996) * ((1.0 * (3.0 * (((var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a3) - ((var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__b3)))) + (1.0 * (2.0 * (((var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * 9.120000000000001) - ((var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a1))))); // microA_per_microF
        const double var_INab__INab = (1.9238999999999999e-09 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__nai * _lt_0_row[37]) - var_extracellular__nao)) / _lt_0_row[38]; // microA_per_microF
        const double var_IKb__IKb = 0.0189 * _lt_0_row[36] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IpCa__IpCa = (0.00050000000000000001 * var_chaste_interface__intracellular_ions__cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_ICab__ICab = (((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_ICaL__gamma_cai * var_chaste_interface__intracellular_ions__cai * _lt_0_row[39]) - (var_ICaL__gamma_cao * var_extracellular__cao)) * 2.36776e-07) / _lt_0_row[40]; // microA_per_microF
        const double var_ICl__IClCa_junc = (0.2843 / (1.0 + (0.10000000000000001 / var_chaste_interface__intracellular_ions__cass))) * (var_chaste_interface__membrane__v - ( -26.712338705498265 * log(150.0 / var_chaste_interface__intracellular_ions__clss))); // microA_per_microF
        const double var_reversal_potentials__ECl =  -26.712338705498265 * log(150.0 / var_chaste_interface__intracellular_ions__cli); // millivolt
        const double var_ICl__IClCa_sl = (0.0 / (1.0 + (0.10000000000000001 / var_chaste_interface__intracellular_ions__cai))) * (var_chaste_interface__membrane__v - var_reversal_potentials__ECl); // microA_per_microF
        const double var_ICl__IClb = 0.00198 * (var_chaste_interface__membrane__v - var_reversal_potentials__ECl); // microA_per_microF
        const double var_I_katp__I_katp = mParameters[5] * pow(var_extracellular__ko * 0.20000000000000001, 0.23999999999999999) * (var_chaste_interface__membrane__v - var_reversal_potentials__EK) * 0.066453846153846155; // microA_per_microF
        const double var_chaste_interface__membrane__Istim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_diff__JdiffNa = (var_chaste_interface__intracellular_ions__nass - var_chaste_interface__intracellular_ions__nai) * 0.5; // millimolar_per_millisecond
        const double var_diff__Jdiff = (var_chaste_interface__intracellular_ions__cass - var_chaste_interface__intracellular_ions__cai) * 5.0; // millimolar_per_millisecond
        const double var_SERCA__fJupp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_SERCA__Jup = mParameters[2] * ((((1.0 - var_SERCA__fJupp) * ((var_chaste_interface__intracellular_ions__cai * 0.0054250000000000001) / (var_chaste_interface__intracellular_ions__cai + 0.00092000000000000003))) + (var_SERCA__fJupp * ((var_chaste_interface__intracellular_ions__cai * 0.01491875) / ((var_chaste_interface__intracellular_ions__cai + 0.00092000000000000003) - 0.00017000000000000001)))) - ((0.0048824999999999997 * var_chaste_interface__intracellular_ions__cansr) * 0.066666666666666666)); // millimolar_per_millisecond
        const double var_diff__JdiffK = (var_chaste_interface__intracellular_ions__kss - var_chaste_interface__intracellular_ions__ki) * 0.5; // millimolar_per_millisecond
        const double var_diff__JdiffCl = (var_chaste_interface__intracellular_ions__clss - var_chaste_interface__intracellular_ions__cli) * 0.5; // millimolar_per_millisecond
        const double var_ryr__fJrelp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ryr__Jrel = mParameters[1] * (((1.0 - var_ryr__fJrelp) * var_chaste_interface__ryr__Jrel_np) + (var_ryr__fJrelp * var_chaste_interface__ryr__Jrel_p)); // millimolar_per_millisecond
        const double var_trans_flux__Jtr = (var_chaste_interface__intracellular_ions__cansr - var_chaste_interface__intracellular_ions__cajsr) * 0.016666666666666666; // millimolar_per_millisecond
        const double var_ICaL__km2n = var_chaste_interface__ICaL__jca * 1.0; // per_millisecond
        const double var_ryr__tau_rel_b = 4.75 / (1.0 + (0.0123 / var_chaste_interface__intracellular_ions__cajsr)); // millisecond
        const double var_ryr__tau_relp_b = 5.9375 / (1.0 + (0.0123 / var_chaste_interface__intracellular_ions__cajsr)); // millisecond
        const double d_dt_chaste_interface__intracellular_ions__cai = (1.0 / (1.0 + (0.00011900000000000002 / pow(0.0023800000000000002 + var_chaste_interface__intracellular_ions__cai, 2.0)) + (3.5000000000000004e-05 / pow(0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai, 2.0)))) * (((((-((var_ICaL__ICaL_i + var_IpCa__IpCa + var_ICab__ICab) - (2.0 * var_INaCa__INaCa_i))) * 0.00015335760000000003) * 0.20057937422849834) - ((var_SERCA__Jup * 2.0972688000000006e-06) * 38705.801844873327)) + ((var_diff__Jdiff * 7.5988000000000021e-07) * 38705.801844873327)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__CaMK__CaMKt = (mParameters[3] * var_CaMK__CaMKb * (var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt)) - (0.00068000000000000005 * var_chaste_interface__CaMK__CaMKt); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__nai = (((-(var_INa__INa + var_INaL__INaL + (3.0 * var_INaCa__INaCa_i) + var_ICaL__ICaNa_i + (3.0 * var_INaK__INaK) + var_INab__INab)) * 0.00015335760000000003) * 0.40115874845699667) + ((var_diff__JdiffNa * 7.5988000000000021e-07) * 38705.801844873327); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__nass = (((-(var_ICaL__ICaNa_ss + (3.0 * var_INaCa__INaCa_ss))) * 0.00015335760000000003) * 13.639397447537888) - var_diff__JdiffNa; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__ki = (((-(((var_Ito__Ito + var_IKr__IKr + var_IKs__IKs + var_IK1__IK1 + var_IKb__IKb + var_I_katp__I_katp + (var_chaste_interface__membrane__Istim / HeartConfig::Instance()->GetCapacitance())) - (2.0 * var_INaK__INaK)) + var_ICaL__ICaK_i)) * 0.00015335760000000003) * 0.40115874845699667) + ((var_diff__JdiffK * 7.5988000000000021e-07) * 38705.801844873327); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__kss = (((-var_ICaL__ICaK_ss) * 0.00015335760000000003) * 13.639397447537888) - var_diff__JdiffK; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cass = (1.0 / (1.0 + (4.0890000000000003e-05 / pow(0.00087000000000000001 + var_chaste_interface__intracellular_ions__cass, 2.0)) + (0.0097788000000000007 / pow(0.0086999999999999994 + var_chaste_interface__intracellular_ions__cass, 2.0)))) * (((((-(var_ICaL__ICaL_ss - (2.0 * var_INaCa__INaCa_ss))) * 0.00015335760000000003) * 6.8196987237689441) + ((var_ryr__Jrel * 1.8237120000000002e-07) * 1315997.2627256932)) - var_diff__Jdiff); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cansr = var_SERCA__Jup - ((var_trans_flux__Jtr * 1.8237120000000002e-07) * 476810.60243684537); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cajsr = (1.0 / (1.0 + (8.0 / pow(0.80000000000000004 + var_chaste_interface__intracellular_ions__cajsr, 2.0)))) * (var_trans_flux__Jtr - var_ryr__Jrel); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cli = (((var_ICl__IClb + var_ICl__IClCa_sl) * 0.00015335760000000003) * 0.40115874845699667) + ((var_diff__JdiffCl * 7.5988000000000021e-07) * 38705.801844873327); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__clss = ((var_ICl__IClCa_junc * 0.00015335760000000003) * 13.639397447537888) - var_diff__JdiffCl; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__INa__m = (_lt_0_row[41] - var_chaste_interface__INa__m) / _lt_0_row[42]; // per_millisecond
        const double d_dt_chaste_interface__INa__h = (_lt_0_row[43] - var_chaste_interface__INa__h) / _lt_0_row[44]; // per_millisecond
        const double d_dt_chaste_interface__INa__j = (_lt_0_row[45] - var_chaste_interface__INa__j) / _lt_0_row[46]; // per_millisecond
        const double d_dt_chaste_interface__INa__hp = (_lt_0_row[47] - var_chaste_interface__INa__hp) / _lt_0_row[48]; // per_millisecond
        const double d_dt_chaste_interface__INa__jp = (_lt_0_row[49] - var_chaste_interface__INa__jp) / _lt_0_row[50]; // per_millisecond
        const double d_dt_chaste_interface__INaL__mL = (_lt_0_row[51] - var_chaste_interface__INaL__mL) / _lt_0_row[52]; // per_millisecond
        const double d_dt_chaste_interface__INaL__hL = (_lt_0_row[53] - var_chaste_interface__INaL__hL) * 0.0050000000000000001; // per_millisecond
        const double d_dt_chaste_interface__INaL__hLp = (_lt_0_row[54] - var_chaste_interface__INaL__hLp) * 0.0016666666666666668; // per_millisecond
        const double d_dt_chaste_interface__Ito__a = (_lt_0_row[55] - var_chaste_interface__Ito__a) / _lt_0_row[56]; // per_millisecond
        const double d_dt_chaste_interface__Ito__iF = (_lt_0_row[57] - var_chaste_interface__Ito__iF) / _lt_0_row[58]; // per_millisecond
        const double d_dt_chaste_interface__Ito__iS = (_lt_0_row[59] - var_chaste_interface__Ito__iS) / _lt_0_row[60]; // per_millisecond
        const double d_dt_chaste_interface__Ito__ap = (_lt_0_row[61] - var_chaste_interface__Ito__ap) / _lt_0_row[62]; // per_millisecond
        const double d_dt_chaste_interface__Ito__iFp = (_lt_0_row[63] - var_chaste_interface__Ito__iFp) / _lt_0_row[64]; // per_millisecond
        const double d_dt_chaste_interface__Ito__iSp = (_lt_0_row[65] - var_chaste_interface__Ito__iSp) / _lt_0_row[66]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__d = (_lt_0_row[67] - var_chaste_interface__ICaL__d) / _lt_0_row[68]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__ff = (_lt_0_row[69] - var_chaste_interface__ICaL__ff) / _lt_0_row[70]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__fs = (_lt_0_row[71] - var_chaste_interface__ICaL__fs) / _lt_0_row[72]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__fcaf = (_lt_0_row[73] - var_chaste_interface__ICaL__fcaf) / _lt_0_row[74]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__fcas = (_lt_0_row[75] - var_chaste_interface__ICaL__fcas) / _lt_0_row[76]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__jca = (_lt_0_row[77] - var_chaste_interface__ICaL__jca) * 0.013793103448275862; // per_millisecond
        const double d_dt_chaste_interface__ICaL__ffp = (_lt_0_row[78] - var_chaste_interface__ICaL__ffp) / _lt_0_row[79]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__fcafp = (_lt_0_row[80] - var_chaste_interface__ICaL__fcafp) / _lt_0_row[81]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__nca_ss = ((1.0 / ((500.0 / var_ICaL__km2n) + pow(1.0 + (0.002 / var_chaste_interface__intracellular_ions__cass), 4.0))) * 500.0) - (var_chaste_interface__ICaL__nca_ss * var_ICaL__km2n); // per_millisecond
        const double d_dt_chaste_interface__ICaL__nca_i = ((1.0 / ((500.0 / var_ICaL__km2n) + pow(1.0 + (0.002 / var_chaste_interface__intracellular_ions__cai), 4.0))) * 500.0) - (var_chaste_interface__ICaL__nca_i * var_ICaL__km2n); // per_millisecond
        const double d_dt_chaste_interface__IKr__C1 = ((0.15437500000000001 * var_chaste_interface__IKr__C2) + (_lt_0_row[82] * var_chaste_interface__IKr__O) + (_lt_0_row[83] * var_chaste_interface__IKr__I)) - (_lt_0_row[84] * var_chaste_interface__IKr__C1); // per_millisecond
        const double d_dt_chaste_interface__IKr__C2 = ((_lt_0_row[85] * var_chaste_interface__IKr__C3) + (0.19109999999999999 * var_chaste_interface__IKr__C1)) - (_lt_0_row[86] * var_chaste_interface__IKr__C2); // per_millisecond
        const double d_dt_chaste_interface__IKr__C3 = (_lt_0_row[87] * var_chaste_interface__IKr__C2) - (_lt_0_row[88] * var_chaste_interface__IKr__C3); // per_millisecond
        const double d_dt_chaste_interface__IKr__I = ((_lt_0_row[89] * var_chaste_interface__IKr__C1) + (_lt_0_row[90] * var_chaste_interface__IKr__O)) - (_lt_0_row[91] * var_chaste_interface__IKr__I); // per_millisecond
        const double d_dt_chaste_interface__IKr__O = ((_lt_0_row[92] * var_chaste_interface__IKr__C1) + (_lt_0_row[93] * var_chaste_interface__IKr__I)) - (_lt_0_row[94] * var_chaste_interface__IKr__O); // per_millisecond
        const double d_dt_chaste_interface__IKs__xs1 = (_lt_0_row[95] - var_chaste_interface__IKs__xs1) / _lt_0_row[96]; // per_millisecond
        const double d_dt_chaste_interface__IKs__xs2 = (_lt_0_row[97] - var_chaste_interface__IKs__xs2) / _lt_0_row[98]; // per_millisecond
        const double d_dt_chaste_interface__ryr__Jrel_np = ((((( -2.375 * var_ICaL__ICaL_ss) * 1.0) / (1.0 + pow(1.7 / var_chaste_interface__intracellular_ions__cajsr, 8.0))) * 1.7) - var_chaste_interface__ryr__Jrel_np) / ((var_ryr__tau_rel_b < 0.001) ? 0.001 : var_ryr__tau_rel_b); // 'millimolar per millisecond per millisecond'
        const double d_dt_chaste_interface__ryr__Jrel_p = ((((( -2.96875 * var_ICaL__ICaL_ss) * 1.0) / (1.0 + pow(1.7 / var_chaste_interface__intracellular_ions__cajsr, 8.0))) * 1.7) - var_chaste_interface__ryr__Jrel_p) / ((var_ryr__tau_relp_b < 0.001) ? 0.001 : var_ryr__tau_relp_b); // 'millimolar per millisecond per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__v = 0.0;
        }
        else
        {
            const double var_ICaL__ICaL = var_ICaL__ICaL_ss + var_ICaL__ICaL_i; // microA_per_microF
            const double var_ICaL__ICaNa = var_ICaL__ICaNa_ss + var_ICaL__ICaNa_i; // microA_per_microF
            const double var_ICaL__ICaK = var_ICaL__ICaK_ss + var_ICaL__ICaK_i; // microA_per_microF
            const double var_ICl__IClCa = var_ICl__IClCa_junc + var_ICl__IClCa_sl; // microA_per_microF
            d_dt_chaste_interface__membrane__v = -(var_INa__INa + var_INaL__INaL + var_Ito__Ito + var_ICaL__ICaL + var_ICaL__ICaNa + var_ICaL__ICaK + var_IKr__IKr + var_IKs__IKs + var_IK1__IK1 + var_INaCa__INaCa_i + var_INaCa__INaCa_ss + var_INaK__INaK + var_INab__INab + var_IKb__IKb + var_IpCa__IpCa + var_ICab__ICab + var_ICl__IClCa + var_ICl__IClb + var_I_katp__I_katp + (var_chaste_interface__membrane__Istim / HeartConfig::Instance()->GetCapacitance())); // 'millivolt per millisecond'
        }
        
        rDY[0] = d_dt_chaste_interface__membrane__v;
        rDY[1] = d_dt_chaste_interface__intracellular_ions__cai;
        rDY[2] = d_dt_chaste_interface__CaMK__CaMKt;
        rDY[3] = d_dt_chaste_interface__intracellular_ions__nai;
        rDY[4] = d_dt_chaste_interface__intracellular_ions__nass;
        rDY[5] = d_dt_chaste_interface__intracellular_ions__ki;
        rDY[6] = d_dt_chaste_interface__intracellular_ions__kss;
        rDY[7] = d_dt_chaste_interface__intracellular_ions__cass;
        rDY[8] = d_dt_chaste_interface__intracellular_ions__cansr;
        rDY[9] = d_dt_chaste_interface__intracellular_ions__cajsr;
        rDY[10] = d_dt_chaste_interface__intracellular_ions__cli;
        rDY[11] = d_dt_chaste_interface__intracellular_ions__clss;
        rDY[12] = d_dt_chaste_interface__INa__m;
        rDY[13] = d_dt_chaste_interface__INa__h;
        rDY[14] = d_dt_chaste_interface__INa__j;
        rDY[15] = d_dt_chaste_interface__INa__hp;
        rDY[16] = d_dt_chaste_interface__INa__jp;
        rDY[17] = d_dt_chaste_interface__INaL__mL;
        rDY[18] = d_dt_chaste_interface__INaL__hL;
        rDY[19] = d_dt_chaste_interface__INaL__hLp;
        rDY[20] = d_dt_chaste_interface__Ito__a;
        rDY[21] = d_dt_chaste_interface__Ito__iF;
        rDY[22] = d_dt_chaste_interface__Ito__iS;
        rDY[23] = d_dt_chaste_interface__Ito__ap;
        rDY[24] = d_dt_chaste_interface__Ito__iFp;
        rDY[25] = d_dt_chaste_interface__Ito__iSp;
        rDY[26] = d_dt_chaste_interface__ICaL__d;
        rDY[27] = d_dt_chaste_interface__ICaL__ff;
        rDY[28] = d_dt_chaste_interface__ICaL__fs;
        rDY[29] = d_dt_chaste_interface__ICaL__fcaf;
        rDY[30] = d_dt_chaste_interface__ICaL__fcas;
        rDY[31] = d_dt_chaste_interface__ICaL__jca;
        rDY[32] = d_dt_chaste_interface__ICaL__ffp;
        rDY[33] = d_dt_chaste_interface__ICaL__fcafp;
        rDY[34] = d_dt_chaste_interface__ICaL__nca_ss;
        rDY[35] = d_dt_chaste_interface__ICaL__nca_i;
        rDY[36] = d_dt_chaste_interface__IKr__C1;
        rDY[37] = d_dt_chaste_interface__IKr__C2;
        rDY[38] = d_dt_chaste_interface__IKr__C3;
        rDY[39] = d_dt_chaste_interface__IKr__I;
        rDY[40] = d_dt_chaste_interface__IKr__O;
        rDY[41] = d_dt_chaste_interface__IKs__xs1;
        rDY[42] = d_dt_chaste_interface__IKs__xs2;
        rDY[43] = d_dt_chaste_interface__ryr__Jrel_np;
        rDY[44] = d_dt_chaste_interface__ryr__Jrel_p;
    }
    
template<>
void OdeSystemInformation<CellToRORddynClmidFromCellMLOpt>::Initialise(void)
{
    this->mSystemName = "ToRORd_dyn_chloride";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-9.133918e+01);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.297576e-05);

    // rY[2]:
    this->mVariableNames.push_back("CaMK__CaMKt");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.018820e-02);

    // rY[3]:
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.594867e+01);

    // rY[4]:
    this->mVariableNames.push_back("intracellular_ions__nass");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.594922e+01);

    // rY[5]:
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.567131e+02);

    // rY[6]:
    this->mVariableNames.push_back("intracellular_ions__kss");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.567130e+02);

    // rY[7]:
    this->mVariableNames.push_back("intracellular_ions__cass");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(6.642187e-05);

    // rY[8]:
    this->mVariableNames.push_back("intracellular_ions__cansr");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.012225e+00);

    // rY[9]:
    this->mVariableNames.push_back("intracellular_ions__cajsr");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.016415e+00);

    // rY[10]:
    this->mVariableNames.push_back("cytosolic_chloride_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(4.891277e+01);

    // rY[11]:
    this->mVariableNames.push_back("intracellular_ions__clss");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(4.891274e+01);

    // rY[12]:
    this->mVariableNames.push_back("INa__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.619565e-04);

    // rY[13]:
    this->mVariableNames.push_back("INa__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.739077e-01);

    // rY[14]:
    this->mVariableNames.push_back("INa__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.737841e-01);

    // rY[15]:
    this->mVariableNames.push_back("INa__hp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.478972e-01);

    // rY[16]:
    this->mVariableNames.push_back("INa__jp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.735375e-01);

    // rY[17]:
    this->mVariableNames.push_back("INaL__mL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.987709e-05);

    // rY[18]:
    this->mVariableNames.push_back("INaL__hL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.986118e-01);

    // rY[19]:
    this->mVariableNames.push_back("INaL__hLp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.339899e-01);

    // rY[20]:
    this->mVariableNames.push_back("Ito__a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.994042e-04);

    // rY[21]:
    this->mVariableNames.push_back("Ito__iF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.997514e-01);

    // rY[22]:
    this->mVariableNames.push_back("Ito__iS");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.702538e-01);

    // rY[23]:
    this->mVariableNames.push_back("Ito__ap");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.072777e-04);

    // rY[24]:
    this->mVariableNames.push_back("Ito__iFp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.997514e-01);

    // rY[25]:
    this->mVariableNames.push_back("Ito__iSp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(6.351927e-01);

    // rY[26]:
    this->mVariableNames.push_back("ICaL__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(-8.334604e-30);

    // rY[27]:
    this->mVariableNames.push_back("ICaL__ff");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.000000e+00);

    // rY[28]:
    this->mVariableNames.push_back("ICaL__fs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.183587e-01);

    // rY[29]:
    this->mVariableNames.push_back("ICaL__fcaf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.000000e+00);

    // rY[30]:
    this->mVariableNames.push_back("ICaL__fcas");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.997540e-01);

    // rY[31]:
    this->mVariableNames.push_back("ICaL__jca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.999743e-01);

    // rY[32]:
    this->mVariableNames.push_back("ICaL__ffp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.000000e+00);

    // rY[33]:
    this->mVariableNames.push_back("ICaL__fcafp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.000000e+00);

    // rY[34]:
    this->mVariableNames.push_back("ICaL__nca_ss");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.336520e-04);

    // rY[35]:
    this->mVariableNames.push_back("ICaL__nca_i");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.257861e-03);

    // rY[36]:
    this->mVariableNames.push_back("IKr__C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.983451e-01);

    // rY[37]:
    this->mVariableNames.push_back("IKr__C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.086460e-04);

    // rY[38]:
    this->mVariableNames.push_back("IKr__C3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.910047e-04);

    // rY[39]:
    this->mVariableNames.push_back("IKr__I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.064230e-05);

    // rY[40]:
    this->mVariableNames.push_back("IKr__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.445733e-04);

    // rY[41]:
    this->mVariableNames.push_back("IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.642293e-01);

    // rY[42]:
    this->mVariableNames.push_back("IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.327348e-04);

    // rY[43]:
    this->mVariableNames.push_back("ryr__Jrel_np");
    this->mVariableUnits.push_back("millimolar_per_millisecond");
    this->mInitialConditions.push_back(-1.300486e-21);

    // rY[44]:
    this->mVariableNames.push_back("ryr__Jrel_p");
    this->mVariableUnits.push_back("millimolar_per_millisecond");
    this->mInitialConditions.push_back(-7.610714e-20);

    // mParameters[0]:
    this->mParameterNames.push_back("CaMKo_var");
    this->mParameterUnits.push_back("dimensionless");
    
    // mParameters[1]:
    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("dimensionless");
    
    // mParameters[2]:
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("dimensionless");
    
    // mParameters[3]:
    this->mParameterNames.push_back("aCaMK_var");
    this->mParameterUnits.push_back("per_millimolar_per_millisecond");
    
    // mParameters[4]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");
    
    // mParameters[5]:
    this->mParameterNames.push_back("membrane_atp_dependent_potassium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");
    
    // mParameters[6]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    // mParameters[7]:
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    // mParameters[8]:
    this->mParameterNames.push_back("membrane_persistent_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    // mParameters[9]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    // mParameters[10]:
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    // mParameters[11]:
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    // mParameters[12]:
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    // mParameters[13]:
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(CellToRORddynClmidFromCellMLOpt)
